// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 55;
	objects = {

/* Begin PBXFileReference section */
		9F009B19279FCD68001F5AA1 /* 2149. Rearrange Array Elements by Sign.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2149. Rearrange Array Elements by Sign.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F033ABF2770002D0061BF76 /* 1200. Minimum Absolute Difference.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1200. Minimum Absolute Difference.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F033AC727704F870061BF76 /* 1400. Construct K Palindrome Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1400. Construct K Palindrome Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0689442899FC0200EAE156 /* 729. My Calendar I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "729. My Calendar I.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F07B65427C5BB9000694094 /* 133. Clone Graph.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "133. Clone Graph.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0A51D128D7FA5C005868FD /* 609. Find Duplicate File in System.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "609. Find Duplicate File in System.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0D4B5828A1E30D00CC4EB8 /* 823. Binary Trees With Factors.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "823. Binary Trees With Factors.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0E81562834DD72009056A5 /* 1192. Critical Connections in a Network.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1192. Critical Connections in a Network.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0F8F6A27FD1CAF003C69FE /* 923. 3Sum With Multiplicity.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "923. 3Sum With Multiplicity.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F0FBF8928A484570096F69D /* 98. Validate Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "98. Validate Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F11EFBA28CEBDB2004D8F9D /* 948. Bag of Tokens.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "948. Bag of Tokens.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F12931727A3C1A80093C28B /* 211. Design Add and Search Words Data Structure.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "211. Design Add and Search Words Data Structure.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F19AE9A280F88130064EEC1 /* 173. Binary Search Tree Iterator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "173. Binary Search Tree Iterator.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A58DF27D1989000CC210B /* 799. Champagne Tower.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "799. Champagne Tower.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A7E992844431C00CD5FF4 /* 29. Divide Two Integers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "29. Divide Two Integers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A7E9A2844469F00CD5FF4 /* 318. Maximum Product of Word Lengths.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "318. Maximum Product of Word Lengths.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A7E9B28444C6900CD5FF4 /* 2288. Apply Discount to Prices.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2288. Apply Discount to Prices.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A7E9C28444E0800CD5FF4 /* 2287. Rearrange Characters to Make Target String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2287. Rearrange Characters to Make Target String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1A7E9D28444E6300CD5FF4 /* 268. Missing Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "268. Missing Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1B7CBC2772F7F9008E8923 /* 1153. String Transforms Into Another String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1153. String Transforms Into Another String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1BFE0228750B8400D94F58 /* 509. Fibonacci Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "509. Fibonacci Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1DE6EB27B8B9AD00A63635 /* 2169. Count Operations to Obtain Zero.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2169. Count Operations to Obtain Zero.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1DE6EC27B8B9B900A63635 /* 2170. Minimum Operations to Make the Array Alternating.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2170. Minimum Operations to Make the Array Alternating.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1DE6ED27B8BA0300A63635 /* 2171. Removing Minimum Number of Magic Beans.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2171. Removing Minimum Number of Magic Beans.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1DE6EE27B8BCF700A63635 /* 78. Subsets.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "78. Subsets.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F1F8CD7283718EE003AC84A /* 63. Unique Paths II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "63. Unique Paths II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F20932627A8CDA50041E51A /* 121. Best Time to Buy and Sell Stock.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "121. Best Time to Buy and Sell Stock.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA327D469F400E0BC4B /* 1359. Count All Valid Pickup and Delivery Options.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1359. Count All Valid Pickup and Delivery Options.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA427D46A1F00E0BC4B /* 2197. Replace Non-Coprime Numbers in Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2197. Replace Non-Coprime Numbers in Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA527D46A4900E0BC4B /* 2196. Create Binary Tree From Descriptions.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2196. Create Binary Tree From Descriptions.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA627D46AC600E0BC4B /* 2195. Append K Integers With Minimal Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2195. Append K Integers With Minimal Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA727D46B0A00E0BC4B /* 2194. Cells in a Range on an Excel Sheet.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2194. Cells in a Range on an Excel Sheet.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA827D46B4500E0BC4B /* 2191. Sort the Jumbled Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2191. Sort the Jumbled Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F213EA927D46B9200E0BC4B /* 2190. Most Frequent Number Following Key In an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2190. Most Frequent Number Following Key In an Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F21B4F7288F6D9900B11C88 /* 236. Lowest Common Ancestor of a Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "236. Lowest Common Ancestor of a Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F22859C27E0170C00646D21 /* 1249. Minimum Remove to Make Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1249. Minimum Remove to Make Valid Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F22B528280A7A8800BD3C90 /* 538. Convert BST to Greater Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "538. Convert BST to Greater Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F28304E28A5D23F009405FD /* 235. Lowest Common Ancestor of a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "235. Lowest Common Ancestor of a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F29B417277D2D5800130E74 /* 1244. Design A Leaderboard.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1244. Design A Leaderboard.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2B52B0278E536000F3D029 /* 701. Insert into a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "701. Insert into a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2B52B1278E9FEA00F3D029 /* 2133. Check if Every Row and Column Contains All Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2133. Check if Every Row and Column Contains All Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2C1694276968B500862684 /* 147. Insertion Sort List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "147. Insertion Sort List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2D224E280CE88700CEA159 /* 230. Kth Smallest Element in a BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "230. Kth Smallest Element in a BST.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2DD2C8284838FA00885B87 /* 867. Transpose Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "867. Transpose Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2DD2C9284839BB00885B87 /* 594. Longest Harmonious Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "594. Longest Harmonious Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2E446227ED5AA200536E1E /* 1029. Two City Scheduling.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1029. Two City Scheduling.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F2E8EE127D3597900A76C91 /* 740. Delete and Earn.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "740. Delete and Earn.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F30862C27DAD2180088F948 /* 61. Rotate List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "61. Rotate List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F336B8D283DBE6D00B5B836 /* 354. Russian Doll Envelopes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "354. Russian Doll Envelopes.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F34650E28C58437007F1160 /* 429. N-ary Tree Level Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "429. N-ary Tree Level Order Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F36030F2845A30C000A214F /* 1461. Check If a String Contains All Binary Codes of Size K.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1461. Check If a String Contains All Binary Codes of Size K.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F37440727EA9F6D004D3778 /* 991. Broken Calculator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "991. Broken Calculator.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F37CEB327B5EDA30074A4AE /* 567. Permutation in String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "567. Permutation in String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F387471287CFDBD004D0C28 /* 473. Matchsticks to Square.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "473. Matchsticks to Square.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F3E28AA27D5849300990201 /* 21. Merge Two Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "21. Merge Two Sorted Lists.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F3ECE0027754B6B00253E7C /* 56. Merge Intervals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "56. Merge Intervals.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F3ED5D028B5B56A00A27150 /* 326. Power of Three.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "326. Power of Three.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F402CFF2862954200FB72B1 /* 215. Kth Largest Element in an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "215. Kth Largest Element in an Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F402D0028629DC600FB72B1 /* 324. Wiggle Sort II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "324. Wiggle Sort II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F424FDF27BC7F7C0012BA4A /* 24. Swap Nodes in Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "24. Swap Nodes in Pairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F43938927C714080009D69A /* 148. Sort List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "148. Sort List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F439DA82888DB3C000828EF /* 92. Reverse Linked List II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "92. Reverse Linked List II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F43DDCD27E45660004536C9 /* 316. Remove Duplicate Letters.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "316. Remove Duplicate Letters.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4557D2288785DE00F9BE70 /* 792. Number of Matching Subsequences.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "792. Number of Matching Subsequences.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F463E2628C6C9BC00CE4DFB /* 814. Binary Tree Pruning.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "814. Binary Tree Pruning.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4818F6289B4A42006934E3 /* 858. Mirror Reflection.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "858. Mirror Reflection.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61D72765D77E008E177A /* 721. Accounts Merge.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "721. Accounts Merge.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61D82765D7C6008E177A /* 258. Add Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "258. Add Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61D92765D7F9008E177A /* 2. Add Two Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2. Add Two Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61DA2765D875008E177A /* 6. Zigzag Conversion.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "6. Zigzag Conversion.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61DB2765D896008E177A /* 1306. Jump Game III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1306. Jump Game III.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61DD2765D8F1008E177A /* 5. Longest Palindromic Substring.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "5. Longest Palindromic Substring.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61DE2765D91F008E177A /* 122. Best Time to Buy and Sell Stock II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "122. Best Time to Buy and Sell Stock II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F4E61DF2765D985008E177A /* 3. Longest Substring Without Repeating Characters.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3. Longest Substring Without Repeating Characters.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F501D5727CEF2B60035C47A /* 392. Is Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "392. Is Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F50842627FFB8A90058AEE8 /* 703. Kth Largest Element in a Stream.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "703. Kth Largest Element in a Stream.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F52679E2772A4AD0075AA6F /* 143. Reorder List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "143. Reorder List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F55F6A2278670EB00BE8162 /* 1094. Car Pooling.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1094. Car Pooling.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F562F3D2797980F00E96D57 /* 142. Linked List Cycle II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "142. Linked List Cycle II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F562F3E2797E76000E96D57 /* 31. Next Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "31. Next Permutation.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F578283276EC84D00A492CC /* 394. Decode String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "394. Decode String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F57BBAA282CDCA40038D1D8 /* 47. Permutations II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "47. Permutations II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5A961027841B07001BA86F /* 42. Trapping Rain Water.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "42. Trapping Rain Water.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5BF34327E2C0EE00E46A42 /* 856. Score of Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "856. Score of Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5D188F279BDA2000E918F6 /* 1510. Stone Game IV.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1510. Stone Game IV.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5D889F27C858190027C55D /* 165. Compare Version Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "165. Compare Version Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5DD7BF2793D44700B000E2 /* 849. Maximize Distance to Closest Person.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "849. Maximize Distance to Closest Person.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5DD7C02793D53400B000E2 /* 2139. Minimum Moves to Reach Target Score.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2139. Minimum Moves to Reach Target Score.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5DD7C12793D66500B000E2 /* 2138. Divide a String Into Groups of Size k.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2138. Divide a String Into Groups of Size k.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5EF7C527CDA47000B39E17 /* 228. Summary Ranges.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "228. Summary Ranges.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5EF7C627CDA49100B39E17 /* 338. Counting Bits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "338. Counting Bits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F5F90F92817A29100F812A1 /* 1584. Min Cost to Connect All Points.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1584. Min Cost to Connect All Points.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F61D9ED27DEC39F00FF49D9 /* 71. Simplify Path.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "71. Simplify Path.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F633D7E279538CC009B86B7 /* 2091. Removing Minimum and Maximum From Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2091. Removing Minimum and Maximum From Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F65A7C627793C8200BBAA4A /* 476. Number Complement.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "476. Number Complement.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6DD978282783EC00A059EA /* 2264. Largest 3-Same-Digit Number in String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2264. Largest 3-Same-Digit Number in String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6DD979282785ED00A059EA /* 2265. Count Nodes Equal to Average of Subtree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2265. Count Nodes Equal to Average of Subtree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6DD97A282794F800A059EA /* 2266. Count Number of Texts.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2266. Count Number of Texts.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6DD97B28279F8200A059EA /* 341. Flatten Nested List Iterator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "341. Flatten Nested List Iterator.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6E301227EBF0C40082E010 /* 881. Boats to Save People.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "881. Boats to Save People.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6E7ECF284D854D0080263F /* 160. Intersection of Two Linked Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "160. Intersection of Two Linked Lists.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F6F536E286150BE00068AC8 /* 1642. Furthest Building You Can Reach.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1642. Furthest Building You Can Reach.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F73640D27F135CF00A836A9 /* 81. Search in Rotated Sorted Array II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "81. Search in Rotated Sorted Array II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F73640E27F1361600A836A9 /* 1337. The K Weakest Rows in a Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1337. The K Weakest Rows in a Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F73640F27F1363E00A836A9 /* 2215. Find the Difference of Two Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2215. Find the Difference of Two Arrays.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F73641027F137E100A836A9 /* 2217. Find Palindrome With Fixed Length.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2217. Find Palindrome With Fixed Length.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F740C122876685100484227 /* 97. Interleaving String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "97. Interleaving String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F743CF527D044FB00DB2C13 /* 413. Arithmetic Slices.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "413. Arithmetic Slices.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F754087278BB52B006E0683 /* 67. Add Binary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "67. Add Binary.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F75F5B8276816C6008BC3BB /* 938. Range Sum of BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "938. Range Sum of BST.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F75F5B92768644A008BC3BB /* 9. Palindrome Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "9. Palindrome Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F78465F2783C6620086C924 /* 1009. Complement of Base 10 Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1009. Complement of Base 10 Integer.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F796FA9287BA37F00C4E9AD /* 199. Binary Tree Right Side View.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "199. Binary Tree Right Side View.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F7A6FC02890C14F0028D6BB /* 114. Flatten Binary Tree to Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "114. Flatten Binary Tree to Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F7D2FB327C311BB000FE5B1 /* 169. Majority Element.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "169. Majority Element.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F80335627E952D7005EF905 /* 1663. Smallest String With A Given Numeric Value.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1663. Smallest String With A Given Numeric Value.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F80F51927E5809D00938425 /* 895. Maximum Frequency Stack.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "895. Maximum Frequency Stack.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F81A37C2766C4EB005387BD /* 1446. Consecutive Characters.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1446. Consecutive Characters.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8255312764D0BC00EE47F0 /* 878. Nth Magical Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "878. Nth Magical Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8255322764EF4000EE47F0 /* 8. String to Integer (atoi).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "8. String to Integer (atoi).playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F82B2012785661E00E02695 /* 1863. Sum of All Subset XOR Totals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1863. Sum of All Subset XOR Totals.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F82E88727F95C8B00F277B6 /* 2224. Minimum Number of Operations to Convert Time.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2224. Minimum Number of Operations to Convert Time.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F82E88827F95CA600F277B6 /* 2225. Find Players With Zero or One Losses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2225. Find Players With Zero or One Losses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F82E88927F95CBE00F277B6 /* 2226. Maximum Candies Allocated to K Children.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2226. Maximum Candies Allocated to K Children.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F82E88A27F95CD300F277B6 /* 2227. Encrypt and Decrypt Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2227. Encrypt and Decrypt Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F85F8C9280E40A000CA5F9D /* 99. Recover Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "99. Recover Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8678C1279F792C0006DAF2 /* 941. Valid Mountain Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "941. Valid Mountain Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8678C2279F794B0006DAF2 /* 520. Detect Capital.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "520. Detect Capital.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8678C3279F796A0006DAF2 /* 1291. Sequential Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1291. Sequential Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F88C62E28D406BC0013B16E /* 1770. Maximum Score from Performing Multiplication Operations.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1770. Maximum Score from Performing Multiplication Operations.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8C78F528ADBF1700EFA55C /* 1338. Reduce Array Size to The Half.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1338. Reduce Array Size to The Half.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8C83022886309B00F11C20 /* 118. Pascal's Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "118. Pascal's Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8C9CF028C0329B00CAA20F /* 1448. Count Good Nodes in Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1448. Count Good Nodes in Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8CF769283C64BB00B37E7C /* 32. Longest Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "32. Longest Valid Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8D24F62769B6150012654A /* 624. Maximum Distance in Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "624. Maximum Distance in Arrays.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8D8EC328A0DC6200F24DDD /* 300. Longest Increasing Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "300. Longest Increasing Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8DE9DC27B49EE300679206 /* 560. Subarray Sum Equals K.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "560. Subarray Sum Equals K.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8DF0E727A0CF8B008F8196 /* 1305. All Elements in Two Binary Search Trees.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1305. All Elements in Two Binary Search Trees.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8EF6202839F10A007476DA /* 2278. Percentage of Letter in String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2278. Percentage of Letter in String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8EF6212839F148007476DA /* 2279. Maximum Bags With Full Capacity of Rocks.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2279. Maximum Bags With Full Capacity of Rocks.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8EF6222839F1F2007476DA /* 2280. Minimum Lines to Represent a Line Chart.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2280. Minimum Lines to Represent a Line Chart.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F8F717C277A8C7400EF05B5 /* 876. Middle of the Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "876. Middle of the Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F908F6D28B6F60700052FEC /* 383. Ransom Note.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "383. Ransom Note.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F94B3FC28B4570800663474 /* 234. Palindrome Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "234. Palindrome Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F973B57282B40B100C03962 /* 1641. Count Sorted Vowel Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1641. Count Sorted Vowel Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9CF72927BB278E00519B15 /* 136. Single Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "136. Single Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9CF72A27BB290800519B15 /* 104. Maximum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "104. Maximum Depth of Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9E01EE2765B97C00D3E1AC /* 416. Partition Equal Subset Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "416. Partition Equal Subset Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9E01EF2765D1D300D3E1AC /* 17. Letter Combinations of a Phone Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "17. Letter Combinations of a Phone Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9FE3762859732A00BB8B76 /* 1048. Longest String Chain.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1048. Longest String Chain.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9F9FF71A28C96EFD0047F2FF /* 100. Same Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "100. Same Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA0AB5728653DB4007C49C6 /* 1354. Construct Target Array With Multiple Sums.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1354. Construct Target Array With Multiple Sums.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA0B39027963F87009141AC /* 605. Can Place Flowers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "605. Can Place Flowers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA5207827799CD700B6FB9B /* .gitignore */ = {isa = PBXFileReference; lastKnownFileType = text; path = .gitignore; sourceTree = "<group>"; };
		9FA5B44E28211B4C009947F7 /* 581. Shortest Unsorted Continuous Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "581. Shortest Unsorted Continuous Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA5B44F282122E8009947F7 /* 2259. Remove Digit From Number to Maximize Result.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2259. Remove Digit From Number to Maximize Result.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA5B45028212AD1009947F7 /* 2260. Minimum Consecutive Cards to Pick Up.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2260. Minimum Consecutive Cards to Pick Up.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA601BF27A622EF00FE7487 /* 189. Rotate Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "189. Rotate Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA699F827E80031003E620F /* 763. Partition Labels.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "763. Partition Labels.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA699F927E80052003E620F /* 1007. Minimum Domino Rotations For Equal Row.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1007. Minimum Domino Rotations For Equal Row.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FA81BF628920CFD00DA8D9C /* 242. Valid Anagram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "242. Valid Anagram.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FAD150F28064F92005470C1 /* 59. Spiral Matrix II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "59. Spiral Matrix II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FAE014628D94373008948A0 /* 718. Maximum Length of Repeated Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "718. Maximum Length of Repeated Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB2991B27A56C14004DFFEB /* 84. Largest Rectangle in Histogram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "84. Largest Rectangle in Histogram.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB587C8278277080012B6ED /* 997. Find the Town Judge.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "997. Find the Town Judge.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB74A6A277D2E74003A55E9 /* 1015. Smallest Integer Divisible by K.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1015. Smallest Integer Divisible by K.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB7FC2C28BD931300BBEFCE /* 48. Rotate Image.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "48. Rotate Image.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB85A2C2880E93C00125946 /* 695. Max Area of Island.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "695. Max Area of Island.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FB90AE627C46186000B476A /* 171. Excel Sheet Column Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "171. Excel Sheet Column Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FBAFDAD27E16DC800268DD8 /* 946. Validate Stack Sequences.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "946. Validate Stack Sequences.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FBBFFC9277988DE0076658D /* 75. Sort Colors.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "75. Sort Colors.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FBD58F227B09B090010638D /* 389. Find the Difference.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "389. Find the Difference.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FBEA5DF27C128A10084A56A /* 1675. Minimize Deviation in Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1675. Minimize Deviation in Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FBECC652805020B00BE9DFE /* 289. Game of Life.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "289. Game of Life.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC4D7D527F5404500168CC6 /* 410. Split Array Largest Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "410. Split Array Largest Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC4D7D627F5556300168CC6 /* 120. Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "120. Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC52A082794EA5B002D504C /* 290. Word Pattern.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "290. Word Pattern.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC8219E28B301B5005EE7ED /* 342. Power of Four.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "342. Power of Four.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC8610F27A7B58C00163992 /* 1672. Richest Customer Wealth.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1672. Richest Customer Wealth.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC99E84286E777F00BEA626 /* 1710. Maximum Units on a Truck.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1710. Maximum Units on a Truck.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC9FCBB276C0E8D00B80C3E /* 221._ Maximal Square.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "221._ Maximal Square.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FC9FCBC276C596C00B80C3E /* 11. Container With Most Water.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "11. Container With Most Water.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCA6ED3279A347D007526E9 /* 134. Gas Station.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "134. Gas Station.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCA6ED4279A8796007526E9 /* 1456. Maximum Number of Vowels in a Substring of Given Length.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1456. Maximum Number of Vowels in a Substring of Given Length.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCC768E288A23D9001E925F /* 86. Partition List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "86. Partition List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCD982E27C1F74D00A508BF /* 1288. Remove Covered Intervals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1288. Remove Covered Intervals.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCD982F27C1F7A200A508BF /* 2180. Count Integers With Even Digit Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2180. Count Integers With Even Digit Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCD983027C1F81000A508BF /* 2181. Merge Nodes in Between Zeros.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2181. Merge Nodes in Between Zeros.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FCD983127C1F83100A508BF /* 2182. Construct String With Repeat Limit.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2182. Construct String With Repeat Limit.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD176942821FD670090038E /* 1679. Max Number of K-Sum Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1679. Max Number of K-Sum Pairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD18B2B2808FC770028E676 /* 669. Trim a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "669. Trim a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD1DAB7277A900200EADDCE /* 200. Number of Islands.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "200. Number of Islands.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD37ACB2799356200D9383D /* 875. Koko Eating Bananas.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "875. Koko Eating Bananas.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD3DA73281229BA00C303CD /* 706. Design HashMap.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "706. Design HashMap.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD3F204285861750050C4BC /* 583. Delete Operation for Two Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "583. Delete Operation for Two Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD435CA27EF38C20012B2F1 /* 704. Binary Search.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "704. Binary Search.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD6C45B2787BB0700709199 /* 382. Linked List Random Node.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "382. Linked List Random Node.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD77F292824AB2600739DB7 /* 1209. Remove All Adjacent Duplicates in String II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1209. Remove All Adjacent Duplicates in String II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD7F64E28322074006214BB /* 1091. Shortest Path in Binary Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1091. Shortest Path in Binary Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD80CDA28234C0400D8BE29 /* 225. Implement Stack using Queues.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "225. Implement Stack using Queues.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD80CDB2823513600D8BE29 /* 2255. Count Prefixes of a Given String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2255. Count Prefixes of a Given String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD8181027D6DAAC00D37C55 /* 141. Linked List Cycle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "141. Linked List Cycle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD917942810D86900F4D592 /* 705. Design HashSet.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "705. Design HashSet.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FD99A8D28AC6DAA00D1365E /* 804. Unique Morse Code Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "804. Unique Morse Code Words.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FDACFA228A9C89600C952A8 /* 13. Roman to Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "13. Roman to Integer.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FDB6F7F287E59AA002F36F7 /* 102. Binary Tree Level Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "102. Binary Tree Level Order Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FDD8D5E2835D361009B215F /* 329. Longest Increasing Path in a Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "329. Longest Increasing Path in a Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FDEAA6327F287540072A412 /* 287. Find the Duplicate Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "287. Find the Duplicate Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE0A8C02897574B00C6DDB3 /* 62. Unique Paths.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "62. Unique Paths.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE0C8CC283B5E780079CB83 /* 474. Ones and Zeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "474. Ones and Zeroes.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE21424277BDE4900E3BC95 /* 116. Populating Next Right Pointers in Each Node.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "116. Populating Next Right Pointers in Each Node.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE240ED28079CAE003EB1CE /* 700. Search in a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "700. Search in a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE2ED95283F02EC009AFBA4 /* 191. Number of 1 Bits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "191. Number of 1 Bits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE2ED96283F0316009AFBA4 /* 190. Reverse Bits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "190. Reverse Bits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE33285284ECFF4004D0030 /* 88. Merge Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "88. Merge Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE4DFA7279309BC00A37953 /* 1345. Jump Game IV.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1345. Jump Game IV.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE55242278FA4F100DCBCB9 /* 452. Minimum Number of Arrows to Burst Balloons.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "452. Minimum Number of Arrows to Burst Balloons.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE77F3627A29E8500BE265F /* 421. Maximum XOR of Two Numbers in an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "421. Maximum XOR of Two Numbers in an Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FE9E96B28404CB80055564A /* 1342. Number of Steps to Reduce a Number to Zero.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1342. Number of Steps to Reduce a Number to Zero.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FEA012A28D00812005DCBD2 /* 393. UTF-8 Validation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "393. UTF-8 Validation.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FEA86BB27BF1F7C00F29004 /* 402. Remove K Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "402. Remove K Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FEB41C62829F29400438442 /* 216. Combination Sum III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "216. Combination Sum III.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FEC7DA928AF1E1400F545F4 /* 659. Split Array into Consecutive Subsequences.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "659. Split Array into Consecutive Subsequences.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF0BFE628D2AFD100B6291F /* 2007. Find Original Array From Doubled Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2007. Find Original Array From Doubled Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF1D5492846E5A100D2491B /* 1480. Running Sum of 1d Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1480. Running Sum of 1d Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF29A7628A7FF740022B0E8 /* 30. Substring with Concatenation of All Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "30. Substring with Concatenation of All Words.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF410D428D158D700F62D72 /* 1457. Pseudo-Palindromic Paths in a Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1457. Pseudo-Palindromic Paths in a Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF4F38E277152C7002DFE91 /* 231. Power of Two.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "231. Power of Two.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF5C25B28BEE6EF00D50347 /* 417. Pacific Atlantic Water Flow.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "417. Pacific Atlantic Water Flow.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF65FD828C818EA00ABE7DC /* 606. Construct String from Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "606. Construct String from Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF65FD928C81CDF00ABE7DC /* 617. Merge Two Binary Trees.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "617. Merge Two Binary Trees.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF74CEA28AB17AE00C8620E /* 387. First Unique Character in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "387. First Unique Character in a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF7C7532873BB21009C4FA1 /* 128. Longest Consecutive Sequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "128. Longest Consecutive Sequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF80A6528C1821600501A09 /* 637. Average of Levels in Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "637. Average of Levels in Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF8320E2898AC1600155C3C /* 378. Kth Smallest Element in a Sorted Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "378. Kth Smallest Element in a Sorted Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF85CC0282DDC5F00C6727E /* 117. Populating Next Right Pointers in Each Node II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "117. Populating Next Right Pointers in Each Node II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FF94B72289C9996007A5763 /* 377. Combination Sum IV.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "377. Combination Sum IV.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFA936F27F3DFAD0039997F /* 74. Search a 2D Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "74. Search a 2D Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFAF29E2803AC90000224A8 /* 1260. Shift 2D Grid.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1260. Shift 2D Grid.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFB48CD278D02F500D64117 /* 1022. Sum of Root To Leaf Binary Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1022. Sum of Root To Leaf Binary Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFB5142288E18CB00009123 /* 94. Binary Tree Inorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "94. Binary Tree Inorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFB5143288E18EA00009123 /* 34. Find First and Last Position of Element in Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "34. Find First and Last Position of Element in Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFB79CD27D82B7600EAD811 /* 82. Remove Duplicates from Sorted List II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "82. Remove Duplicates from Sorted List II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFB8F03287FA273006B777A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "105. Construct Binary Tree from Preorder and Inorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFBAFC127A645FA00115853 /* 2154. Keep Multiplying Found Values by Two.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2154. Keep Multiplying Found Values by Two.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFBAFC227A6464A00115853 /* 2155. All Divisions With the Highest Score of a Binary Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2155. All Divisions With the Highest Score of a Binary Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFBAFC427A6482B00115853 /* 2148. Count Elements With Strictly Smaller and Greater Elements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2148. Count Elements With Strictly Smaller and Greater Elements.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFC6C3F2863F6CA00BA970C /* 630. Course Schedule III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "630. Course Schedule III.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFCA92227B348F700784846 /* 532. K-diff Pairs in an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "532. K-diff Pairs in an Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFD08E1281621C6006C2306 /* 284. Peeking Iterator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "284. Peeking Iterator.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFD18E827BDD109001F55FB /* 39. Combination Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "39. Combination Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFDED7C281B754A00F7A909 /* 785. Is Graph Bipartite?.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "785. Is Graph Bipartite?.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		9FFF419828A33456003AA24E /* 108. Convert Sorted Array to Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "108. Convert Sorted Array to Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		9F82552A2764D01100EE47F0 = {
			isa = PBXGroup;
			children = (
				9FAE014628D94373008948A0 /* 718. Maximum Length of Repeated Subarray.playground */,
				9F0A51D128D7FA5C005868FD /* 609. Find Duplicate File in System.playground */,
				9F88C62E28D406BC0013B16E /* 1770. Maximum Score from Performing Multiplication Operations.playground */,
				9FF0BFE628D2AFD100B6291F /* 2007. Find Original Array From Doubled Array.playground */,
				9FF410D428D158D700F62D72 /* 1457. Pseudo-Palindromic Paths in a Binary Tree.playground */,
				9FEA012A28D00812005DCBD2 /* 393. UTF-8 Validation.playground */,
				9F11EFBA28CEBDB2004D8F9D /* 948. Bag of Tokens.playground */,
				9F9FF71A28C96EFD0047F2FF /* 100. Same Tree.playground */,
				9FF65FD928C81CDF00ABE7DC /* 617. Merge Two Binary Trees.playground */,
				9FF65FD828C818EA00ABE7DC /* 606. Construct String from Binary Tree.playground */,
				9FA5207827799CD700B6FB9B /* .gitignore */,
				9F4E61D92765D7F9008E177A /* 2. Add Two Numbers.playground */,
				9F4E61DF2765D985008E177A /* 3. Longest Substring Without Repeating Characters.playground */,
				9F4E61DD2765D8F1008E177A /* 5. Longest Palindromic Substring.playground */,
				9F4E61DA2765D875008E177A /* 6. Zigzag Conversion.playground */,
				9F8255322764EF4000EE47F0 /* 8. String to Integer (atoi).playground */,
				9F75F5B92768644A008BC3BB /* 9. Palindrome Number.playground */,
				9FC9FCBC276C596C00B80C3E /* 11. Container With Most Water.playground */,
				9FDACFA228A9C89600C952A8 /* 13. Roman to Integer.playground */,
				9F9E01EF2765D1D300D3E1AC /* 17. Letter Combinations of a Phone Number.playground */,
				9F3E28AA27D5849300990201 /* 21. Merge Two Sorted Lists.playground */,
				9F424FDF27BC7F7C0012BA4A /* 24. Swap Nodes in Pairs.playground */,
				9F1A7E992844431C00CD5FF4 /* 29. Divide Two Integers.playground */,
				9FF29A7628A7FF740022B0E8 /* 30. Substring with Concatenation of All Words.playground */,
				9F562F3E2797E76000E96D57 /* 31. Next Permutation.playground */,
				9F8CF769283C64BB00B37E7C /* 32. Longest Valid Parentheses.playground */,
				9FFB5143288E18EA00009123 /* 34. Find First and Last Position of Element in Sorted Array.playground */,
				9FFD18E827BDD109001F55FB /* 39. Combination Sum.playground */,
				9F5A961027841B07001BA86F /* 42. Trapping Rain Water.playground */,
				9F57BBAA282CDCA40038D1D8 /* 47. Permutations II.playground */,
				9FB7FC2C28BD931300BBEFCE /* 48. Rotate Image.playground */,
				9F3ECE0027754B6B00253E7C /* 56. Merge Intervals.playground */,
				9FAD150F28064F92005470C1 /* 59. Spiral Matrix II.playground */,
				9F30862C27DAD2180088F948 /* 61. Rotate List.playground */,
				9FE0A8C02897574B00C6DDB3 /* 62. Unique Paths.playground */,
				9F1F8CD7283718EE003AC84A /* 63. Unique Paths II.playground */,
				9F754087278BB52B006E0683 /* 67. Add Binary.playground */,
				9F61D9ED27DEC39F00FF49D9 /* 71. Simplify Path.playground */,
				9FFA936F27F3DFAD0039997F /* 74. Search a 2D Matrix.playground */,
				9FBBFFC9277988DE0076658D /* 75. Sort Colors.playground */,
				9F1DE6EE27B8BCF700A63635 /* 78. Subsets.playground */,
				9F73640D27F135CF00A836A9 /* 81. Search in Rotated Sorted Array II.playground */,
				9FFB79CD27D82B7600EAD811 /* 82. Remove Duplicates from Sorted List II.playground */,
				9FB2991B27A56C14004DFFEB /* 84. Largest Rectangle in Histogram.playground */,
				9FCC768E288A23D9001E925F /* 86. Partition List.playground */,
				9FE33285284ECFF4004D0030 /* 88. Merge Sorted Array.playground */,
				9F439DA82888DB3C000828EF /* 92. Reverse Linked List II.playground */,
				9FFB5142288E18CB00009123 /* 94. Binary Tree Inorder Traversal.playground */,
				9F740C122876685100484227 /* 97. Interleaving String.playground */,
				9F0FBF8928A484570096F69D /* 98. Validate Binary Search Tree.playground */,
				9F85F8C9280E40A000CA5F9D /* 99. Recover Binary Search Tree.playground */,
				9FDB6F7F287E59AA002F36F7 /* 102. Binary Tree Level Order Traversal.playground */,
				9F9CF72A27BB290800519B15 /* 104. Maximum Depth of Binary Tree.playground */,
				9FFB8F03287FA273006B777A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.playground */,
				9FFF419828A33456003AA24E /* 108. Convert Sorted Array to Binary Search Tree.playground */,
				9F7A6FC02890C14F0028D6BB /* 114. Flatten Binary Tree to Linked List.playground */,
				9FE21424277BDE4900E3BC95 /* 116. Populating Next Right Pointers in Each Node.playground */,
				9FF85CC0282DDC5F00C6727E /* 117. Populating Next Right Pointers in Each Node II.playground */,
				9F8C83022886309B00F11C20 /* 118. Pascal's Triangle.playground */,
				9FC4D7D627F5556300168CC6 /* 120. Triangle.playground */,
				9F20932627A8CDA50041E51A /* 121. Best Time to Buy and Sell Stock.playground */,
				9F4E61DE2765D91F008E177A /* 122. Best Time to Buy and Sell Stock II.playground */,
				9FF7C7532873BB21009C4FA1 /* 128. Longest Consecutive Sequence.playground */,
				9F07B65427C5BB9000694094 /* 133. Clone Graph.playground */,
				9FCA6ED3279A347D007526E9 /* 134. Gas Station.playground */,
				9F9CF72927BB278E00519B15 /* 136. Single Number.playground */,
				9FD8181027D6DAAC00D37C55 /* 141. Linked List Cycle.playground */,
				9F562F3D2797980F00E96D57 /* 142. Linked List Cycle II.playground */,
				9F52679E2772A4AD0075AA6F /* 143. Reorder List.playground */,
				9F2C1694276968B500862684 /* 147. Insertion Sort List.playground */,
				9F43938927C714080009D69A /* 148. Sort List.playground */,
				9F6E7ECF284D854D0080263F /* 160. Intersection of Two Linked Lists.playground */,
				9F5D889F27C858190027C55D /* 165. Compare Version Numbers.playground */,
				9F7D2FB327C311BB000FE5B1 /* 169. Majority Element.playground */,
				9FB90AE627C46186000B476A /* 171. Excel Sheet Column Number.playground */,
				9F19AE9A280F88130064EEC1 /* 173. Binary Search Tree Iterator.playground */,
				9FA601BF27A622EF00FE7487 /* 189. Rotate Array.playground */,
				9FE2ED96283F0316009AFBA4 /* 190. Reverse Bits.playground */,
				9FE2ED95283F02EC009AFBA4 /* 191. Number of 1 Bits.playground */,
				9F796FA9287BA37F00C4E9AD /* 199. Binary Tree Right Side View.playground */,
				9FD1DAB7277A900200EADDCE /* 200. Number of Islands.playground */,
				9F12931727A3C1A80093C28B /* 211. Design Add and Search Words Data Structure.playground */,
				9F402CFF2862954200FB72B1 /* 215. Kth Largest Element in an Array.playground */,
				9FEB41C62829F29400438442 /* 216. Combination Sum III.playground */,
				9FC9FCBB276C0E8D00B80C3E /* 221._ Maximal Square.playground */,
				9FD80CDA28234C0400D8BE29 /* 225. Implement Stack using Queues.playground */,
				9F5EF7C527CDA47000B39E17 /* 228. Summary Ranges.playground */,
				9F2D224E280CE88700CEA159 /* 230. Kth Smallest Element in a BST.playground */,
				9FF4F38E277152C7002DFE91 /* 231. Power of Two.playground */,
				9F94B3FC28B4570800663474 /* 234. Palindrome Linked List.playground */,
				9F28304E28A5D23F009405FD /* 235. Lowest Common Ancestor of a Binary Search Tree.playground */,
				9F21B4F7288F6D9900B11C88 /* 236. Lowest Common Ancestor of a Binary Tree.playground */,
				9FA81BF628920CFD00DA8D9C /* 242. Valid Anagram.playground */,
				9F4E61D82765D7C6008E177A /* 258. Add Digits.playground */,
				9F1A7E9D28444E6300CD5FF4 /* 268. Missing Number.playground */,
				9FFD08E1281621C6006C2306 /* 284. Peeking Iterator.playground */,
				9FDEAA6327F287540072A412 /* 287. Find the Duplicate Number.playground */,
				9FBECC652805020B00BE9DFE /* 289. Game of Life.playground */,
				9FC52A082794EA5B002D504C /* 290. Word Pattern.playground */,
				9F8D8EC328A0DC6200F24DDD /* 300. Longest Increasing Subsequence.playground */,
				9F43DDCD27E45660004536C9 /* 316. Remove Duplicate Letters.playground */,
				9F1A7E9A2844469F00CD5FF4 /* 318. Maximum Product of Word Lengths.playground */,
				9F402D0028629DC600FB72B1 /* 324. Wiggle Sort II.playground */,
				9F3ED5D028B5B56A00A27150 /* 326. Power of Three.playground */,
				9FDD8D5E2835D361009B215F /* 329. Longest Increasing Path in a Matrix.playground */,
				9F5EF7C627CDA49100B39E17 /* 338. Counting Bits.playground */,
				9F6DD97B28279F8200A059EA /* 341. Flatten Nested List Iterator.playground */,
				9FC8219E28B301B5005EE7ED /* 342. Power of Four.playground */,
				9F336B8D283DBE6D00B5B836 /* 354. Russian Doll Envelopes.playground */,
				9FF94B72289C9996007A5763 /* 377. Combination Sum IV.playground */,
				9FF8320E2898AC1600155C3C /* 378. Kth Smallest Element in a Sorted Matrix.playground */,
				9FD6C45B2787BB0700709199 /* 382. Linked List Random Node.playground */,
				9F908F6D28B6F60700052FEC /* 383. Ransom Note.playground */,
				9FF74CEA28AB17AE00C8620E /* 387. First Unique Character in a String.playground */,
				9FBD58F227B09B090010638D /* 389. Find the Difference.playground */,
				9F501D5727CEF2B60035C47A /* 392. Is Subsequence.playground */,
				9F578283276EC84D00A492CC /* 394. Decode String.playground */,
				9FEA86BB27BF1F7C00F29004 /* 402. Remove K Digits.playground */,
				9FC4D7D527F5404500168CC6 /* 410. Split Array Largest Sum.playground */,
				9F743CF527D044FB00DB2C13 /* 413. Arithmetic Slices.playground */,
				9F9E01EE2765B97C00D3E1AC /* 416. Partition Equal Subset Sum.playground */,
				9FF5C25B28BEE6EF00D50347 /* 417. Pacific Atlantic Water Flow.playground */,
				9FE77F3627A29E8500BE265F /* 421. Maximum XOR of Two Numbers in an Array.playground */,
				9F34650E28C58437007F1160 /* 429. N-ary Tree Level Order Traversal.playground */,
				9FE55242278FA4F100DCBCB9 /* 452. Minimum Number of Arrows to Burst Balloons.playground */,
				9F387471287CFDBD004D0C28 /* 473. Matchsticks to Square.playground */,
				9FE0C8CC283B5E780079CB83 /* 474. Ones and Zeroes.playground */,
				9F65A7C627793C8200BBAA4A /* 476. Number Complement.playground */,
				9F1BFE0228750B8400D94F58 /* 509. Fibonacci Number.playground */,
				9F8678C2279F794B0006DAF2 /* 520. Detect Capital.playground */,
				9FFCA92227B348F700784846 /* 532. K-diff Pairs in an Array.playground */,
				9F22B528280A7A8800BD3C90 /* 538. Convert BST to Greater Tree.playground */,
				9F8DE9DC27B49EE300679206 /* 560. Subarray Sum Equals K.playground */,
				9F37CEB327B5EDA30074A4AE /* 567. Permutation in String.playground */,
				9FA5B44E28211B4C009947F7 /* 581. Shortest Unsorted Continuous Subarray.playground */,
				9FD3F204285861750050C4BC /* 583. Delete Operation for Two Strings.playground */,
				9F2DD2C9284839BB00885B87 /* 594. Longest Harmonious Subsequence.playground */,
				9FA0B39027963F87009141AC /* 605. Can Place Flowers.playground */,
				9F8D24F62769B6150012654A /* 624. Maximum Distance in Arrays.playground */,
				9FFC6C3F2863F6CA00BA970C /* 630. Course Schedule III.playground */,
				9FF80A6528C1821600501A09 /* 637. Average of Levels in Binary Tree.playground */,
				9FEC7DA928AF1E1400F545F4 /* 659. Split Array into Consecutive Subsequences.playground */,
				9FD18B2B2808FC770028E676 /* 669. Trim a Binary Search Tree.playground */,
				9FB85A2C2880E93C00125946 /* 695. Max Area of Island.playground */,
				9FE240ED28079CAE003EB1CE /* 700. Search in a Binary Search Tree.playground */,
				9F2B52B0278E536000F3D029 /* 701. Insert into a Binary Search Tree.playground */,
				9F50842627FFB8A90058AEE8 /* 703. Kth Largest Element in a Stream.playground */,
				9FD435CA27EF38C20012B2F1 /* 704. Binary Search.playground */,
				9FD917942810D86900F4D592 /* 705. Design HashSet.playground */,
				9FD3DA73281229BA00C303CD /* 706. Design HashMap.playground */,
				9F4E61D72765D77E008E177A /* 721. Accounts Merge.playground */,
				9F0689442899FC0200EAE156 /* 729. My Calendar I.playground */,
				9F2E8EE127D3597900A76C91 /* 740. Delete and Earn.playground */,
				9FA699F827E80031003E620F /* 763. Partition Labels.playground */,
				9FFDED7C281B754A00F7A909 /* 785. Is Graph Bipartite?.playground */,
				9F4557D2288785DE00F9BE70 /* 792. Number of Matching Subsequences.playground */,
				9F1A58DF27D1989000CC210B /* 799. Champagne Tower.playground */,
				9FD99A8D28AC6DAA00D1365E /* 804. Unique Morse Code Words.playground */,
				9F463E2628C6C9BC00CE4DFB /* 814. Binary Tree Pruning.playground */,
				9F0D4B5828A1E30D00CC4EB8 /* 823. Binary Trees With Factors.playground */,
				9F5DD7BF2793D44700B000E2 /* 849. Maximize Distance to Closest Person.playground */,
				9F5BF34327E2C0EE00E46A42 /* 856. Score of Parentheses.playground */,
				9F4818F6289B4A42006934E3 /* 858. Mirror Reflection.playground */,
				9F2DD2C8284838FA00885B87 /* 867. Transpose Matrix.playground */,
				9FD37ACB2799356200D9383D /* 875. Koko Eating Bananas.playground */,
				9F8F717C277A8C7400EF05B5 /* 876. Middle of the Linked List.playground */,
				9F8255312764D0BC00EE47F0 /* 878. Nth Magical Number.playground */,
				9F6E301227EBF0C40082E010 /* 881. Boats to Save People.playground */,
				9F80F51927E5809D00938425 /* 895. Maximum Frequency Stack.playground */,
				9F0F8F6A27FD1CAF003C69FE /* 923. 3Sum With Multiplicity.playground */,
				9F75F5B8276816C6008BC3BB /* 938. Range Sum of BST.playground */,
				9F8678C1279F792C0006DAF2 /* 941. Valid Mountain Array.playground */,
				9FBAFDAD27E16DC800268DD8 /* 946. Validate Stack Sequences.playground */,
				9F37440727EA9F6D004D3778 /* 991. Broken Calculator.playground */,
				9FB587C8278277080012B6ED /* 997. Find the Town Judge.playground */,
				9FA699F927E80052003E620F /* 1007. Minimum Domino Rotations For Equal Row.playground */,
				9F78465F2783C6620086C924 /* 1009. Complement of Base 10 Integer.playground */,
				9FB74A6A277D2E74003A55E9 /* 1015. Smallest Integer Divisible by K.playground */,
				9FFB48CD278D02F500D64117 /* 1022. Sum of Root To Leaf Binary Numbers.playground */,
				9F2E446227ED5AA200536E1E /* 1029. Two City Scheduling.playground */,
				9F9FE3762859732A00BB8B76 /* 1048. Longest String Chain.playground */,
				9FD7F64E28322074006214BB /* 1091. Shortest Path in Binary Matrix.playground */,
				9F55F6A2278670EB00BE8162 /* 1094. Car Pooling.playground */,
				9F1B7CBC2772F7F9008E8923 /* 1153. String Transforms Into Another String.playground */,
				9F0E81562834DD72009056A5 /* 1192. Critical Connections in a Network.playground */,
				9F033ABF2770002D0061BF76 /* 1200. Minimum Absolute Difference.playground */,
				9FD77F292824AB2600739DB7 /* 1209. Remove All Adjacent Duplicates in String II.playground */,
				9F29B417277D2D5800130E74 /* 1244. Design A Leaderboard.playground */,
				9F22859C27E0170C00646D21 /* 1249. Minimum Remove to Make Valid Parentheses.playground */,
				9FFAF29E2803AC90000224A8 /* 1260. Shift 2D Grid.playground */,
				9FCD982E27C1F74D00A508BF /* 1288. Remove Covered Intervals.playground */,
				9F8678C3279F796A0006DAF2 /* 1291. Sequential Digits.playground */,
				9F8DF0E727A0CF8B008F8196 /* 1305. All Elements in Two Binary Search Trees.playground */,
				9F4E61DB2765D896008E177A /* 1306. Jump Game III.playground */,
				9F73640E27F1361600A836A9 /* 1337. The K Weakest Rows in a Matrix.playground */,
				9F8C78F528ADBF1700EFA55C /* 1338. Reduce Array Size to The Half.playground */,
				9FE9E96B28404CB80055564A /* 1342. Number of Steps to Reduce a Number to Zero.playground */,
				9FE4DFA7279309BC00A37953 /* 1345. Jump Game IV.playground */,
				9FA0AB5728653DB4007C49C6 /* 1354. Construct Target Array With Multiple Sums.playground */,
				9F213EA327D469F400E0BC4B /* 1359. Count All Valid Pickup and Delivery Options.playground */,
				9F033AC727704F870061BF76 /* 1400. Construct K Palindrome Strings.playground */,
				9F81A37C2766C4EB005387BD /* 1446. Consecutive Characters.playground */,
				9F8C9CF028C0329B00CAA20F /* 1448. Count Good Nodes in Binary Tree.playground */,
				9FCA6ED4279A8796007526E9 /* 1456. Maximum Number of Vowels in a Substring of Given Length.playground */,
				9F36030F2845A30C000A214F /* 1461. Check If a String Contains All Binary Codes of Size K.playground */,
				9FF1D5492846E5A100D2491B /* 1480. Running Sum of 1d Array.playground */,
				9F5D188F279BDA2000E918F6 /* 1510. Stone Game IV.playground */,
				9F5F90F92817A29100F812A1 /* 1584. Min Cost to Connect All Points.playground */,
				9F973B57282B40B100C03962 /* 1641. Count Sorted Vowel Strings.playground */,
				9F6F536E286150BE00068AC8 /* 1642. Furthest Building You Can Reach.playground */,
				9F80335627E952D7005EF905 /* 1663. Smallest String With A Given Numeric Value.playground */,
				9FC8610F27A7B58C00163992 /* 1672. Richest Customer Wealth.playground */,
				9FBEA5DF27C128A10084A56A /* 1675. Minimize Deviation in Array.playground */,
				9FD176942821FD670090038E /* 1679. Max Number of K-Sum Pairs.playground */,
				9FC99E84286E777F00BEA626 /* 1710. Maximum Units on a Truck.playground */,
				9F82B2012785661E00E02695 /* 1863. Sum of All Subset XOR Totals.playground */,
				9F633D7E279538CC009B86B7 /* 2091. Removing Minimum and Maximum From Array.playground */,
				9F2B52B1278E9FEA00F3D029 /* 2133. Check if Every Row and Column Contains All Numbers.playground */,
				9F5DD7C12793D66500B000E2 /* 2138. Divide a String Into Groups of Size k.playground */,
				9F5DD7C02793D53400B000E2 /* 2139. Minimum Moves to Reach Target Score.playground */,
				9FFBAFC427A6482B00115853 /* 2148. Count Elements With Strictly Smaller and Greater Elements.playground */,
				9F009B19279FCD68001F5AA1 /* 2149. Rearrange Array Elements by Sign.playground */,
				9FFBAFC127A645FA00115853 /* 2154. Keep Multiplying Found Values by Two.playground */,
				9FFBAFC227A6464A00115853 /* 2155. All Divisions With the Highest Score of a Binary Array.playground */,
				9F1DE6EB27B8B9AD00A63635 /* 2169. Count Operations to Obtain Zero.playground */,
				9F1DE6EC27B8B9B900A63635 /* 2170. Minimum Operations to Make the Array Alternating.playground */,
				9F1DE6ED27B8BA0300A63635 /* 2171. Removing Minimum Number of Magic Beans.playground */,
				9FCD982F27C1F7A200A508BF /* 2180. Count Integers With Even Digit Sum.playground */,
				9FCD983027C1F81000A508BF /* 2181. Merge Nodes in Between Zeros.playground */,
				9FCD983127C1F83100A508BF /* 2182. Construct String With Repeat Limit.playground */,
				9F213EA927D46B9200E0BC4B /* 2190. Most Frequent Number Following Key In an Array.playground */,
				9F213EA827D46B4500E0BC4B /* 2191. Sort the Jumbled Numbers.playground */,
				9F213EA727D46B0A00E0BC4B /* 2194. Cells in a Range on an Excel Sheet.playground */,
				9F213EA627D46AC600E0BC4B /* 2195. Append K Integers With Minimal Sum.playground */,
				9F213EA527D46A4900E0BC4B /* 2196. Create Binary Tree From Descriptions.playground */,
				9F213EA427D46A1F00E0BC4B /* 2197. Replace Non-Coprime Numbers in Array.playground */,
				9F73640F27F1363E00A836A9 /* 2215. Find the Difference of Two Arrays.playground */,
				9F73641027F137E100A836A9 /* 2217. Find Palindrome With Fixed Length.playground */,
				9F82E88727F95C8B00F277B6 /* 2224. Minimum Number of Operations to Convert Time.playground */,
				9F82E88827F95CA600F277B6 /* 2225. Find Players With Zero or One Losses.playground */,
				9F82E88927F95CBE00F277B6 /* 2226. Maximum Candies Allocated to K Children.playground */,
				9F82E88A27F95CD300F277B6 /* 2227. Encrypt and Decrypt Strings.playground */,
				9FD80CDB2823513600D8BE29 /* 2255. Count Prefixes of a Given String.playground */,
				9FA5B44F282122E8009947F7 /* 2259. Remove Digit From Number to Maximize Result.playground */,
				9FA5B45028212AD1009947F7 /* 2260. Minimum Consecutive Cards to Pick Up.playground */,
				9F6DD978282783EC00A059EA /* 2264. Largest 3-Same-Digit Number in String.playground */,
				9F6DD979282785ED00A059EA /* 2265. Count Nodes Equal to Average of Subtree.playground */,
				9F6DD97A282794F800A059EA /* 2266. Count Number of Texts.playground */,
				9F8EF6202839F10A007476DA /* 2278. Percentage of Letter in String.playground */,
				9F8EF6212839F148007476DA /* 2279. Maximum Bags With Full Capacity of Rocks.playground */,
				9F8EF6222839F1F2007476DA /* 2280. Minimum Lines to Represent a Line Chart.playground */,
				9F1A7E9C28444E0800CD5FF4 /* 2287. Rearrange Characters to Make Target String.playground */,
				9F1A7E9B28444C6900CD5FF4 /* 2288. Apply Discount to Prices.playground */,
			);
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		9F82552B2764D01100EE47F0 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastUpgradeCheck = 1320;
			};
			buildConfigurationList = 9F82552E2764D01100EE47F0 /* Build configuration list for PBXProject "Leetcode" */;
			compatibilityVersion = "Xcode 13.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 9F82552A2764D01100EE47F0;
			projectDirPath = "";
			projectRoot = "";
			targets = (
			);
		};
/* End PBXProject section */

/* Begin XCBuildConfiguration section */
		9F82552F2764D01100EE47F0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				ONLY_ACTIVE_ARCH = YES;
			};
			name = Debug;
		};
		9F8255302764D01100EE47F0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		9F82552E2764D01100EE47F0 /* Build configuration list for PBXProject "Leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9F82552F2764D01100EE47F0 /* Debug */,
				9F8255302764D01100EE47F0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 9F82552B2764D01100EE47F0 /* Project object */;
}
