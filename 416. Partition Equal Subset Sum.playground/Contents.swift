/// 把組合算出來後，看看是不是total的一半
/// total要為偶數
///
/// 暴力解 （取或不取）
class Solution {
    func canPartition(_ nums: [Int]) -> Bool {
        var total = 0
        for i in nums {
            total += i
        }
        if total % 2 != 0 {
            return false
        }
        let middle = total / 2

        var result: Set<Int> = [0]
        for i in nums {
            for j in result {
                result.insert(i + j)
            }
            if result.contains(middle) {
                return true
            }
        }
        return false
    }
}

let sol = Solution()
print(sol.canPartition([1, 5, 11, 5]))
print(sol.canPartition([1, 2, 3, 5]))
print(sol.canPartition([23, 13, 11, 7, 6, 5, 5]))
print(sol.canPartition([3, 3, 3, 4, 5]))
// print(sol.canPartition
